error[E0308]: mismatched types
  --> $DIR/ref_pat_eat_one_layer_2024_fail.rs:7:17
   |
LL |     if let Some(&mut Some(&_)) = &Some(&Some(0)) {
   |                 ^^^^^^^^^^^^^    --------------- this expression has type `&Option<&Option<{integer}>>`
   |                 |
   |                 types differ in mutability
   |
   = note:      expected reference `&Option<{integer}>`
           found mutable reference `&mut _`

error[E0308]: mismatched types
  --> $DIR/ref_pat_eat_one_layer_2024_fail.rs:10:23
   |
LL |     if let Some(&Some(&_)) = &Some(&mut Some(0)) {
   |                       ^^     ------------------- this expression has type `&Option<&mut Option<{integer}>>`
   |                       |
   |                       expected integer, found `&_`
   |
   = note:   expected type `{integer}`
           found reference `&_`

error[E0308]: mismatched types
  --> $DIR/ref_pat_eat_one_layer_2024_fail.rs:14:27
   |
LL |         let _: &mut u32 = x;
   |                --------   ^ types differ in mutability
   |                |
   |                expected due to this
   |
   = note: expected mutable reference `&mut u32`
                      found reference `&{integer}`

error[E0308]: mismatched types
  --> $DIR/ref_pat_eat_one_layer_2024_fail.rs:17:23
   |
LL |     if let Some(&Some(&x)) = Some(&Some(&mut 0)) {
   |                       ^^     ------------------- this expression has type `Option<&Option<&mut {integer}>>`
   |                       |
   |                       types differ in mutability
   |
   = note: expected mutable reference `&mut {integer}`
                      found reference `&_`
help: consider removing `&` from the pattern
   |
LL |     if let Some(&Some(x)) = Some(&Some(&mut 0)) {
   |                       ~

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0308`.
