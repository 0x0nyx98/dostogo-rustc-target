error[E0282]: type annotations needed
  --> $DIR/recursive-coroutine-boxed.rs:15:23
   |
LL |         let mut gen = Box::pin(foo());
   |                       ^^^^^^^^ cannot infer type of the type parameter `T` declared on the struct `Box`
LL |
LL |         let mut r = gen.as_mut().resume(());
   |                         ------ type must be known at this point
   |
help: consider specifying the generic argument
   |
LL |         let mut gen = Box::<T>::pin(foo());
   |                          +++++

error[E0271]: type mismatch resolving `foo::{opaque#0} normalizes-to _`
  --> $DIR/recursive-coroutine-boxed.rs:14:18
   |
LL |       #[coroutine] || {
   |  __________________^
LL | |         let mut gen = Box::pin(foo());
LL | |
LL | |         let mut r = gen.as_mut().resume(());
...  |
LL | |         }
LL | |     }
   | |_____^ types differ

error[E0271]: type mismatch resolving `foo::{opaque#0} normalizes-to _`
  --> $DIR/recursive-coroutine-boxed.rs:15:32
   |
LL |         let mut gen = Box::pin(foo());
   |                                ^^^^^ types differ

error[E0277]: the size for values of type `impl Coroutine<Yield = (), Return = ()>` cannot be known at compilation time
  --> $DIR/recursive-coroutine-boxed.rs:9:13
   |
LL | fn foo() -> impl Coroutine<Yield = (), Return = ()> {
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `impl Coroutine<Yield = (), Return = ()>`
   = note: the return type of a function must have a statically known size

error[E0271]: type mismatch resolving `foo::{opaque#0} normalizes-to _`
  --> $DIR/recursive-coroutine-boxed.rs:14:18
   |
LL |       #[coroutine] || {
   |  __________________^
LL | |         let mut gen = Box::pin(foo());
LL | |
LL | |         let mut r = gen.as_mut().resume(());
...  |
LL | |         }
LL | |     }
   | |_____^ types differ
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error[E0277]: the size for values of type `impl Coroutine<Yield = (), Return = ()>` cannot be known at compilation time
  --> $DIR/recursive-coroutine-boxed.rs:15:32
   |
LL |         let mut gen = Box::pin(foo());
   |                                ^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `impl Coroutine<Yield = (), Return = ()>`
   = note: the return type of a function must have a statically known size

error[E0271]: type mismatch resolving `foo::{opaque#0} normalizes-to _`
  --> $DIR/recursive-coroutine-boxed.rs:15:32
   |
LL |         let mut gen = Box::pin(foo());
   |                                ^^^^^ types differ
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error[E0271]: type mismatch resolving `foo::{opaque#0} normalizes-to _`
  --> $DIR/recursive-coroutine-boxed.rs:9:1
   |
LL | fn foo() -> impl Coroutine<Yield = (), Return = ()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ types differ

error: aborting due to 8 previous errors

Some errors have detailed explanations: E0271, E0277, E0282.
For more information about an error, try `rustc --explain E0271`.
