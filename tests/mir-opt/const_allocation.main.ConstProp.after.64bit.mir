// MIR for `main` after ConstProp

fn main() -> () {
    let mut _0: ();
    let _1: &[(std::option::Option<i32>, &[&str])];
    let mut _2: &&[(std::option::Option<i32>, &[&str])];

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        _2 = const {ALLOC0: &&[(Option<i32>, &[&str])]};
        _1 = (*_2);
        StorageDead(_2);
        StorageDead(_1);
        _0 = const ();
        return;
    }
}

ALLOC0 (static: FOO, size: 16, align: 8) {
    ╾───────ALLOC1────────╼ 03 00 00 00 00 00 00 00 │ ╾──────╼........
}

ALLOC1 (size: 72, align: 8) {
    0x00 │ 00 00 00 00 __ __ __ __ ╾───────ALLOC2────────╼ │ ....░░░░╾──────╼
    0x10 │ 00 00 00 00 00 00 00 00 00 00 00 00 __ __ __ __ │ ............░░░░
    0x20 │ ╾───────ALLOC3────────╼ 02 00 00 00 00 00 00 00 │ ╾──────╼........
    0x30 │ 01 00 00 00 2a 00 00 00 ╾───────ALLOC4────────╼ │ ....*...╾──────╼
    0x40 │ 03 00 00 00 00 00 00 00                         │ ........
}

ALLOC2 (size: 0, align: 8) {}

ALLOC3 (size: 32, align: 8) {
    0x00 │ ╾───────ALLOC5────────╼ 03 00 00 00 00 00 00 00 │ ╾──────╼........
    0x10 │ ╾───────ALLOC6────────╼ 03 00 00 00 00 00 00 00 │ ╾──────╼........
}

ALLOC5 (size: 3, align: 1) {
    66 6f 6f                                        │ foo
}

ALLOC6 (size: 3, align: 1) {
    62 61 72                                        │ bar
}

ALLOC4 (size: 48, align: 8) {
    0x00 │ ╾───────ALLOC7────────╼ 03 00 00 00 00 00 00 00 │ ╾──────╼........
    0x10 │ ╾───────ALLOC8────────╼ 03 00 00 00 00 00 00 00 │ ╾──────╼........
    0x20 │ ╾───────ALLOC9────────╼ 04 00 00 00 00 00 00 00 │ ╾──────╼........
}

ALLOC7 (size: 3, align: 1) {
    6d 65 68                                        │ meh
}

ALLOC8 (size: 3, align: 1) {
    6d 6f 70                                        │ mop
}

ALLOC9 (size: 4, align: 1) {
    6d c3 b6 70                                     │ m..p
}
