- // MIR for `aggregates` before GVN
+ // MIR for `aggregates` after GVN
  
  fn aggregates() -> () {
      let mut _0: ();
      let _1: S<[u8; 0]>;
      let mut _2: [u8; 0];
      let mut _4: [u16; 0];
      let mut _6: ();
      let mut _8: ();
      let mut _11: i32;
      let mut _12: i32;
      let mut _13: i32;
      let mut _14: i32;
      let mut _15: i32;
      let mut _16: i32;
      let mut _17: i32;
      let mut _18: i32;
      let mut _19: i32;
      let mut _20: i32;
      scope 1 {
          debug a_array => _1;
          let _3: S<[u16; 0]>;
          scope 2 {
              debug b_array => _3;
              let _5: S<()>;
              scope 3 {
                  debug a_tuple => _5;
                  let _7: S<()>;
                  scope 4 {
                      debug b_tuple => _7;
                      let _9: i32;
                      scope 5 {
                          debug val => _9;
                          let _10: [i32; 10];
                          scope 6 {
                              debug array => _10;
                          }
                      }
                  }
              }
          }
      }
  
      bb0: {
          StorageLive(_1);
          StorageLive(_2);
-         _2 = [];
-         _1 = S::<[u8; 0]>(move _2);
+         _2 = const [];
+         _1 = const S::<[u8; 0]>([]);
          StorageDead(_2);
          StorageLive(_3);
          StorageLive(_4);
-         _4 = [];
-         _3 = S::<[u16; 0]>(move _4);
+         _4 = const [];
+         _3 = const S::<[u16; 0]>([]);
          StorageDead(_4);
          StorageLive(_5);
-         StorageLive(_6);
-         _6 = ();
-         _5 = S::<()>(move _6);
-         StorageDead(_6);
+         nop;
+         _6 = const ();
+         _5 = const S::<()>(());
+         nop;
          StorageLive(_7);
          StorageLive(_8);
-         _8 = ();
-         _7 = S::<()>(move _8);
+         _8 = const ();
+         _7 = const S::<()>(());
          StorageDead(_8);
-         StorageLive(_9);
+         nop;
          _9 = const 5_i32;
          StorageLive(_10);
          StorageLive(_11);
-         _11 = _9;
+         _11 = const 5_i32;
          StorageLive(_12);
-         _12 = _9;
+         _12 = const 5_i32;
          StorageLive(_13);
-         _13 = _9;
+         _13 = const 5_i32;
          StorageLive(_14);
-         _14 = _9;
+         _14 = const 5_i32;
          StorageLive(_15);
-         _15 = _9;
+         _15 = const 5_i32;
          StorageLive(_16);
-         _16 = _9;
+         _16 = const 5_i32;
          StorageLive(_17);
-         _17 = _9;
+         _17 = const 5_i32;
          StorageLive(_18);
-         _18 = _9;
+         _18 = const 5_i32;
          StorageLive(_19);
-         _19 = _9;
+         _19 = const 5_i32;
          StorageLive(_20);
-         _20 = _9;
-         _10 = [move _11, move _12, move _13, move _14, move _15, move _16, move _17, move _18, move _19, move _20];
+         _20 = const 5_i32;
+         _10 = [const 5_i32; 10];
          StorageDead(_20);
          StorageDead(_19);
          StorageDead(_18);
          StorageDead(_17);
          StorageDead(_16);
          StorageDead(_15);
          StorageDead(_14);
          StorageDead(_13);
          StorageDead(_12);
          StorageDead(_11);
          _0 = const ();
          StorageDead(_10);
-         StorageDead(_9);
+         nop;
          StorageDead(_7);
          StorageDead(_5);
          StorageDead(_3);
          StorageDead(_1);
          return;
      }
  }
  
